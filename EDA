import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
df=pd.read_csv(r"C:\Users\DIYA\Downloads\Quarterly_Retail_Sales_Tax_Data_by_County_and_City.csv")
sns.set_theme(style="whitegrid", palette="deep")
# Objective 1: Dataset Overview
print(df.shape)
print(df.info())
print(df.isnull().sum())
print(df.describe())
# Objective 2: Annual Total Taxable Sales Trend
annual_sales = df.groupby('Year')['Taxable Sales'].sum().reset_index()
plt.figure(figsize=(10,6), facecolor='#f5f5f5')
ax = sns.lineplot(data=annual_sales, x='Year', y='Taxable Sales',
                  marker='o', color='#FF5733', linewidth=2.5, markersize=8)
ax.set_facecolor('#eaeaea') 
plt.title('Annual Total Taxable Sales Trend', fontsize=16, fontweight='bold')
plt.xlabel('Year', fontsize=12)
plt.ylabel('Taxable Sales', fontsize=12)
plt.grid(True, linestyle='--', linewidth=0.5)
plt.xticks(annual_sales['Year'], rotation=45)
plt.tight_layout()
plt.show()
# Objective 3: Annual Computed Tax Trend 
annual_tax = df.groupby('Year')['Computed Tax'].sum().reset_index()
plt.figure(figsize=(10,6))
sns.lineplot(data=annual_tax, x='Year', y='Computed Tax', marker='o', color='orange')
plt.title('Annual Computed Tax Trend')
plt.xlabel('Year'); plt.ylabel('Computed Tax')
plt.grid(True)
plt.show()
# Objective 4: Top 10 Cities by Total Taxable Sales
top_cities = df.groupby('City')['Taxable Sales'].sum().sort_values(ascending=False).head(10).reset_index()
plt.figure(figsize=(10,6))
sns.barplot(data=top_cities, x='Taxable Sales', y='City', hue='City', palette='viridis', dodge=False, legend=False)
plt.title('Top 10 Cities by Total Taxable Sales', fontsize=16, fontweight='bold')
plt.xlabel('Taxable Sales', fontsize=12)
plt.ylabel('City', fontsize=12)
plt.grid(axis='x', linestyle='--', linewidth=0.5)
plt.tight_layout()
plt.show()
# Objective 5: Distribution of Taxable Sales
plt.figure(figsize=(10,6))
sns.histplot(df['Taxable Sales'], bins=50, kde=True, color='skyblue')
plt.title('Distribution of Taxable Sales')
plt.xlabel('Taxable Sales')
plt.show()
# Objective 6: Quarterly Taxable Sales Distribution
plt.figure(figsize=(8,6))
sns.boxplot(x='Quarter', y='Taxable Sales', data=df)
plt.title('Quarterly Taxable Sales Distribution')
plt.xlabel('Quarter'); plt.ylabel('Taxable Sales')
plt.show()
# Objective 7: Correlation Heatmap
plt.figure(figsize=(10,7))
sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm', linewidths=0.5)
plt.title('Correlation Heatmap')
plt.show()
# Objective 8: Taxable Sales vs. Computed Tax (with regression)
plt.figure(figsize=(8,6))
sns.regplot(x='Taxable Sales', y='Computed Tax', data=df, scatter_kws={"alpha":0.4})
plt.title('Taxable Sales vs. Computed Tax')
plt.xlabel('Taxable Sales'); plt.ylabel('Computed Tax')
plt.show()
# Objective 9: Number of Returns vs. Taxable Sales
plt.figure(figsize=(8,6))
sns.scatterplot(x='Number of Returns', y='Taxable Sales', data=df, alpha=0.5)
plt.title('Number of Returns vs. Taxable Sales')
plt.xlabel('Number of Returns'); plt.ylabel('Taxable Sales')
plt.show()
# Objective 10: Top 10 Counties by Average Computed Tax
top_counties = df.groupby('County')['Computed Tax'].mean().sort_values(ascending=False).head(10).reset_index()
plt.figure(figsize=(10,6))
sns.barplot(data=top_counties, x='Computed Tax', y='County', hue='County', palette='magma', dodge=False, legend=False)
plt.title('Top 10 Counties by Average Computed Tax', fontsize=16, fontweight='bold')
plt.xlabel('Average Computed Tax', fontsize=12)
plt.ylabel('County', fontsize=12)
plt.grid(axis='x', linestyle='--', linewidth=0.5)
plt.tight_layout()
plt.show()
# Objective 11: Year-over-Year Growth Rate in Taxable Sales
annual_sales['YoY Growth (%)'] = annual_sales['Taxable Sales'].pct_change() * 100
plt.figure(figsize=(10,6))
sns.barplot(x='Year', y='YoY Growth (%)', data=annual_sales, hue='Year', palette='coolwarm', dodge=False, legend=False)
plt.axhline(0, color='black', linestyle='--')
plt.title('Year-over-Year Growth in Taxable Sales', fontsize=16, fontweight='bold')
plt.xlabel('Year', fontsize=12)
plt.ylabel('Growth Rate (%)', fontsize=12)
plt.grid(axis='y', linestyle='--', linewidth=0.5)
plt.tight_layout()
plt.show()
# Objective 12: Top 5 Counties by Taxable Sales per Year
top_counties_per_year = df.groupby(['Year', 'County'])['Taxable Sales'].sum().reset_index()
years = sorted(df['Year'].unique())
for year in years:
    top_5 = top_counties_per_year[top_counties_per_year['Year'] == year].sort_values(by='Taxable Sales', ascending=False).head(5)
    plt.figure(figsize=(8,5))
    sns.barplot(x='Taxable Sales', y='County', data=top_5, hue='County', palette='crest', dodge=False, legend=False)
    plt.title(f'Top 5 Counties by Taxable Sales in {year}', fontsize=14, fontweight='bold')
    plt.xlabel('Taxable Sales', fontsize=12)
    plt.ylabel('County', fontsize=12)
    plt.grid(axis='x', linestyle='--', linewidth=0.5)
    plt.tight_layout()
    plt.show()
# Objective 13: Distribution of 'Percent of Tax'
plt.figure(figsize=(10,6))
sns.histplot(df['Percent of Tax'], bins=30, color='orchid', kde=True)
plt.title('Distribution of Percent of Tax')
plt.xlabel('Percent of Tax')
plt.show()
# Objective 14: Taxable Sales Trend by Quarter Across Years
plt.figure(figsize=(12,7))
sns.lineplot(data=df, x='Year', y='Taxable Sales', hue='Quarter')
plt.title('Taxable Sales Trend by Quarter Across Years')
plt.xlabel('Year'); plt.ylabel('Taxable Sales')
plt.legend(title='Quarter')
plt.show()
